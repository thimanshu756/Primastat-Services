name: Node Service Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

env:
  PROJECT_NAME: ps-website
  SERVER_SSH_IP: ${{ secrets.SERVER_SSH_IP }}
  SERVER_SSH_USERNAME: ${{ secrets.SERVER_SSH_USERNAME }}
  SERVER_SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
  SERVER_SSH_PORT: ${{ secrets.SERVER_SSH_PORT }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main' && github.actor == 'shivanshkaushikk') || (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
    strategy:
      matrix:
        node-version: [21.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          docker build -t registry.primastat.in/${{ env.PROJECT_NAME }}:main .

      - name: Login to Docker registry
        run: |
          echo ${{ env.DOCKER_PASSWORD }} | docker login registry.primastat.in -u ${{ env.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image to registry
        run: |
          docker push registry.primastat.in/${{ env.PROJECT_NAME }}:main
  
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run deployment script on remote server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_SSH_IP }}
          username: ${{ secrets.SERVER_SSH_USERNAME }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          debug: true
          script: sudo sh /home/ubuntu/docker_scripts/${{ env.PROJECT_NAME }}.sh

